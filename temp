class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        nums.sort()
        rmCount=0
        hashMap={value:index for index,value in enumerate(nums)}
        result=[]
        for i in range(len(hashMap)):
                try:
                    target=0-nums[i-rmCount]
                except IndexError:
                    break
                for j in range(i-rmCount+1,len(hashMap)):
                    try:
                        curTarget=target-nums[j]
                    except IndexError:
                        break
                    if curTarget in hashMap:
                        #print("shit")
                        curList=[nums[i],nums[j],curTarget]
                        curList.sort()
                        if curList not in result:
                            result.append(curList)
                        '''try:
                            #del hashMap[nums[i]]

                            #del hashMap[nums[j]]
                        except KeyError:
                            pass'''
                        #del hashMap[curTarget]
                        #print(nums)
                        #del nums[i-rmCount]
                        #nums.remove(nums[i-rmCount])
                        #nums.remove(nums[j])
                        #del nums[j-1]
                        #print(nums)
                        
                        #print(curTarget)
                        #nums.remove(curTarget)
                        #rmCount+=1
        return result
        
        #print(hashMap)